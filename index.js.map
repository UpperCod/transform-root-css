{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["import postcss from \"postcss\";\r\n\r\nlet config = {\r\n    varRoot: \":root\",\r\n    quoteScape: /([\\\\]*)(\\`)/g,\r\n    patternsSelector: [\r\n        {\r\n            find: /([\\s]){0,}(\\&)([\\s]){0,}/g,\r\n            replace: \"\",\r\n            scape: false\r\n        },\r\n        {\r\n            /**\r\n             * It allows to add a prefix to the state to the selector by attribute\r\n             * @example: root [checked] =>. $ {root.cn} [$ {root.st} checked]\r\n             */\r\n            find: /\\:root((?:\\[([^\\]]+)\\]){1,}){1}/g,\r\n            replace(content, attrs) {\r\n                return \":root\" + attrs.replace(/\\[/g, \"[${root.px}\");\r\n            }\r\n        },\r\n        {\r\n            /**\r\n             * will replace the selector :root\r\n             * @example :root => ${root.cn}\r\n             */\r\n            find: /\\:root/g,\r\n            replace: \".${root.cn}\",\r\n            scape: true\r\n        },\r\n        {\r\n            find: /\\:global/g,\r\n            replace: \"\",\r\n            scape: true\r\n        }\r\n    ],\r\n    patternsProp: [\r\n        {\r\n            /**\r\n             * Allows you to use the properties of root as template variables\r\n             * @example color : root(primary) => color : ${root.primary}\r\n             */\r\n            find: /(?:root)\\(([^\\)\\(]+)\\)/g,\r\n            replace(context, take) {\r\n                take = take.match(/([\\w\\d]+)/);\r\n                take = (take && take[1]) || \"\";\r\n                take = /^\\d/.test(take) ? \"\" : take;\r\n                return take ? `\\${root.${take}}` : \"\";\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\nfunction clearSpace(selector) {\r\n    return selector.replace(/([\\n\\s\\t]+)/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\r\n}\r\n\r\nfunction quoteScape(string) {\r\n    return string.replace(config.quoteScape, \"\\\\`\");\r\n}\r\n\r\nfunction prepareSelector(selector, deep) {\r\n    if (\r\n        config.patternsSelector.some(\r\n            pattern => pattern.find.test(selector) && pattern.scape\r\n        )\r\n    ) {\r\n        return selector;\r\n    } else {\r\n        return deep ? selector : config.varRoot + \" \" + selector;\r\n    }\r\n}\r\n\r\nfunction setProp(props, [index, value]) {\r\n    props[index] = index in props ? [].concat(props[index], value) : value;\r\n    return props;\r\n}\r\n\r\nfunction translator(nodes, atrule = [], deep = 0) {\r\n    let rules = (nodes || [])\r\n        .map(node => {\r\n            switch (node.type) {\r\n                case \"rule\":\r\n                    let selectors = node.selector\r\n                        .split(\",\")\r\n                        .map(selector => prepareSelector(selector, deep));\r\n                    let props = {};\r\n                    let childs = [];\r\n                    translator(node.nodes, atrule, deep + 1).forEach(value => {\r\n                        if (Array.isArray(value)) {\r\n                            setProp(props, value);\r\n                        } else {\r\n                            childs.push(value);\r\n                        }\r\n                    });\r\n                    return {\r\n                        selectors,\r\n                        childs,\r\n                        props\r\n                    };\r\n                case \"decl\":\r\n                    return [node.prop, node.value];\r\n                case \"atrule\":\r\n                    let group;\r\n                    if (/keyframes/.test(node.name)) {\r\n                        group = translator(node.nodes, atrule, true);\r\n                    } else if (/supports|document/.test(node.name)) {\r\n                        group = translator(node.nodes, [], false);\r\n                    } else if (/media/.test(node.name)) {\r\n                        group = translator(node.nodes, atrule, false);\r\n                    } else {\r\n                        group = translator(node.nodes, atrule, true);\r\n                    }\r\n                    atrule.push({\r\n                        selector: node.name,\r\n                        params: node.params,\r\n                        childs: group\r\n                    });\r\n                    break;\r\n            }\r\n        })\r\n        .filter(value => value);\r\n\r\n    return deep ? rules : { rules, atrule };\r\n}\r\n\r\nfunction createReplace(patterns, string) {\r\n    return patterns.reduce(\r\n        (string, pattern) => string.replace(pattern.find, pattern.replace),\r\n        string\r\n    );\r\n}\r\n\r\nfunction createProps(props) {\r\n    let str = \"\";\r\n    for (let prop in props) {\r\n        [].concat(props[prop]).forEach(value => {\r\n            str += prop + \":\" + createReplace(config.patternsProp, value) + \";\";\r\n        });\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction templateRule(selector, props) {\r\n    return selector + \"{\" + props + \"}\";\r\n}\r\n\r\nfunction createSelector(selector) {\r\n    return clearSpace(createReplace(config.patternsSelector, selector));\r\n}\r\n\r\nfunction templateRules(childs, rules = [], parent = \"\") {\r\n    childs.forEach(rule =>\r\n        rule.selectors.forEach(selector => {\r\n            selector = parent + \" \" + selector;\r\n            let nextSelector = createSelector(selector);\r\n            templateRules(rule.childs, rules, selector);\r\n            let props = createProps(rule.props);\r\n            if (props) {\r\n                rules.push(templateRule(nextSelector, props));\r\n            }\r\n        })\r\n    );\r\n    return rules;\r\n}\r\n\r\nfunction templateAlrule(atrule, rules, prefix = \"@\") {\r\n    atrule.forEach(rule => {\r\n        if (/media/.test(rule.selector)) {\r\n            rules.push(\r\n                templateRule(\r\n                    prefix + rule.selector + \" \" + rule.params,\r\n                    templateRules(rule.childs.rules).join(\"\")\r\n                )\r\n            );\r\n        } else if (/supports|document/.test(rule.selector)) {\r\n            // space to create algorithm for support and document\r\n        } else if (/keyframes/.test(rule.selector)) {\r\n            rules.push(\r\n                templateRule(\r\n                    prefix + rule.selector + \" \" + createSelector(rule.params),\r\n                    templateRules(rule.childs).join(\"\")\r\n                )\r\n            );\r\n        } else {\r\n            if (/import/.test(rule.selector)) {\r\n                rules.unshift(prefix + rule.selector + \" \" + rule.params);\r\n            } else {\r\n                rules.push(\r\n                    templateRule(\r\n                        prefix +\r\n                            rule.selector +\r\n                            \" \" +\r\n                            createSelector(rule.params),\r\n                        createProps(\r\n                            rule.childs.reduce(\r\n                                (props, add) => setProp(props, add),\r\n                                {}\r\n                            )\r\n                        )\r\n                    )\r\n                );\r\n            }\r\n        }\r\n    });\r\n    return rules;\r\n}\r\n\r\nexport default function transform(plugins) {\r\n    let instance = postcss(plugins);\r\n    return function parse(input) {\r\n        return instance\r\n            .process(input, { parser: postcss.parse })\r\n            .then(({ root }) => translator(root.nodes))\r\n            .then(result =>\r\n                templateAlrule(\r\n                    result.atrule,\r\n                    templateRules(result.rules).reverse()\r\n                )\r\n            )\r\n            .then(rules =>\r\n                rules.map(\r\n                    rule => \"function(root){ return `\" + quoteScape(rule) + \"`}\"\r\n                )\r\n            );\r\n    };\r\n}\r\n"],"names":["let"],"mappings":"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"}